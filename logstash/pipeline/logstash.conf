input {
  http {
    host => "0.0.0.0"
    port => 5044
    codec => json
  }
  
  # For receiving logs from OpenTelemetry Collector
  beats {
    port => 5044
  }
}

filter {
  # Parse JSON logs
  if [message] {
    json {
      source => "message"
      target => "parsed"
    }
  }
  
  # Extract trace information if present
  if [parsed][trace_id] {
    mutate {
      add_field => { "traceId" => "%{[parsed][trace_id]}" }
      add_field => { "spanId" => "%{[parsed][span_id]}" }
    }
  }
  
  # Parse timestamp
  if [parsed][@timestamp] {
    date {
      match => [ "[parsed][@timestamp]", "ISO8601" ]
    }
  }
  
  # Add service information
  mutate {
    add_field => { "service" => "flask-app" }
    add_field => { "environment" => "development" }
  }
  
  # Clean up
  mutate {
    remove_field => [ "parsed" ]
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "flask-logs-%{+YYYY.MM.dd}"
    template_name => "flask-logs"
    template_pattern => "flask-logs-*"
    template => {
      "index_patterns" => ["flask-logs-*"],
      "mappings" => {
        "properties" => {
          "@timestamp" => { "type" => "date" },
          "message" => { "type" => "text" },
          "level" => { "type" => "keyword" },
          "service" => { "type" => "keyword" },
          "traceId" => { "type" => "keyword" },
          "spanId" => { "type" => "keyword" },
          "environment" => { "type" => "keyword" }
        }
      }
    }
  }
  
  # Debug output
  stdout {
    codec => rubydebug
  }
}