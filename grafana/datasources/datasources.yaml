# grafana/datasources/datasources.yaml
apiVersion: 1

datasources:
  - name: Prometheus
    type: prometheus
    access: proxy
    url: http://prometheus:9090
    isDefault: true
    editable: true

  - name: Loki
    type: loki
    access: proxy
    url: http://loki:3100
    uid: loki_ds_uid # Unique ID for Loki datasource
    editable: true
    jsonData:
      derivedFields:
        - name: "TraceID" # Field to extract from logs
          matcherRegex: "traceID=(\\w+)" # Regex to find trace IDs in log lines
                                        # Ensure your logs include 'traceID=...' for this to work.
                                        # The current app.py logging doesn't automatically add traceID to all logs.
                                        # For full integration, logging should be correlated with traces.
          # Link to Jaeger datasource, using its UID
          url: '/explore?orgId=${__org.id}&left=["now-1h","now","jaeger_ds_uid",{"query":"${__value.raw}"}]'
          datasourceUid: jaeger_ds_uid 

  # Changed from Tempo to Jaeger
  - name: Jaeger
    type: jaeger
    access: proxy
    url: http://jaeger:16686 # Jaeger Query service endpoint
    uid: jaeger_ds_uid # Unique ID for Jaeger datasource
    editable: true
    jsonData:
      tracesToLogs: # Configuration to link traces in Jaeger to logs in Loki
        datasourceUid: loki_ds_uid # UID of the Loki datasource
        tags: ['job', 'instance', 'service.name', 'otel.library.name'] # Tags to use for correlating traces to logs
        mappedTags: [{ key: 'service.name', value: 'service' }] # Example of remapping a tag
        mapTagNamesEnabled: false
        spanStartTimeShift: '-1h' # Time range adjustment for log querying
        spanEndTimeShift: '1h'
        filterByTraceID: true
        filterBySpanID: false # Set to true if you want to filter by Span ID as well
        lokiSearch: true # Use Loki's search capabilities
