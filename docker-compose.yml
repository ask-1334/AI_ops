version: '3.8'

services:
  # Our Flask application
  flask-app:
    build:
      context: ./app
    ports:
      - "5000:5000"
    depends_on:
      - otel-collector
    networks:
      - observability-network
    volumes:
      - ./app:/app
    environment:
      # Updated to be precise for gRPC endpoint expected by OTLPSpanExporter and OTLPMetricExporter
      - OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:14317 

  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.60.0 # Using a specific version, consider updating if needed
    command: ["--config=/etc/otel-collector/config.yaml"]
    volumes:
      - ./otel-collector/config.yaml:/etc/otel-collector/config.yaml
    ports:
      - "14317:14317"  # OTLP gRPC receiver
      - "14318:14318"  # OTLP HTTP receiver
      - "8889:8889"    # Prometheus exporter
    depends_on:
      - prometheus
      - loki
      - jaeger # Changed from tempo to jaeger
    networks:
      - observability-network

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - observability-network

  # Loki for logs
  loki:
    image: grafana/loki:2.7.0 # Consider updating to a more recent version
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml # Assuming you have a local-config.yaml or use default
    volumes:
      - loki_data:/loki
    networks:
      - observability-network

  # Jaeger for traces (replaces Tempo)
  jaeger:
    image: jaegertracing/all-in-one:1.53 # Using a specific version
    ports:
      - "6831:6831/udp" # Agent - compact thrift protocol
      - "6832:6832/udp" # Agent - binary thrift protocol
      - "5778:5778/tcp"  # Agent - config server
      - "16686:16686"    # Jaeger UI / Query port
      - "14268:14268"    # Collector - OTLP HTTP endpoint
      - "14250:14250"    # Collector - OTLP gRPC endpoint
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - LOG_LEVEL=info # Can be set to debug for more verbose logging
    networks:
      - observability-network
    # For persistent storage with Badger (optional):
    # volumes:
    #   - jaeger_data:/badger

  # Grafana for visualization
  grafana:
    image: grafana/grafana:11.0.0 # Using a recent version, original was 9.3.6/11.6.1
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    # environment: # Kept original commented out Grafana auth settings
    #   - GF_AUTH_ANONYMOUS_ENABLED=true
    #   - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    #   - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - loki
      - jaeger # Changed from tempo to jaeger
    networks:
      - observability-network

networks:
  observability-network:
    driver: bridge

volumes:
  prometheus_data:
  loki_data:
  # tempo_data: # Removed tempo_data
  grafana_data:
  # jaeger_data: # Add if using persistent storage for Jaeger
